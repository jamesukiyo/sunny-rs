name: "Release"

on:
    push:
        tags:
            - "v*"

env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    CARGO_TOKEN: ${{ secrets.CARGO_TOKEN }}
    NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    CARGO_TERM_COLOR: always

jobs:
    check-versions:
        name: Check Published Versions
        runs-on: ubuntu-latest
        outputs:
            skip_cargo: ${{ steps.version_check.outputs.skip_cargo }}
            skip_npm: ${{ steps.version_check.outputs.skip_npm }}
        steps:
            - uses: actions/checkout@v4
            - uses: moonrepo/setup-rust@v1
              with:
                  channel: stable
                  cache-base: "^master$"
            - name: Check if version already published
              id: version_check
              run: |
                  VERSION="${GITHUB_REF#refs/tags/v}"
                  chmod +x scripts/*.sh

                  # run version check and capture outputs
                  SKIP_CARGO=""
                  SKIP_NPM=""

                  echo "Checking if version $VERSION is already published..."

                  echo "Checking crates.io..."
                  if cargo search sunny-cli --limit 1 | grep -q " = \"$VERSION\""; then
                      echo "WARNING: Version $VERSION already exists on crates.io - SKIPPING Cargo publish"
                      SKIP_CARGO="true"
                  else
                      echo "Version $VERSION not found on crates.io - will publish"
                  fi

                  echo "Checking npmjs.org..."
                  HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "https://registry.npmjs.org/@jamesukiyo/sunny-cli/$VERSION")
                  if [[ "$HTTP_CODE" == "200" ]]; then
                      echo "WARNING: Version $VERSION already exists on npmjs.org - SKIPPING NPM publish"
                      SKIP_NPM="true"
                  else
                      echo "Version $VERSION not found on npmjs.org - will publish"
                  fi

                  echo "Version check completed"
                  echo "skip_cargo=${SKIP_CARGO}" >> $GITHUB_OUTPUT
                  echo "skip_npm=${SKIP_NPM}" >> $GITHUB_OUTPUT

    fmt-check:
        name: Format Check
        runs-on: ubuntu-latest
        continue-on-error: true
        steps:
            - uses: actions/checkout@v4
            - uses: moonrepo/setup-rust@v1
              with:
                  channel: stable
                  components: rustfmt
                  cache-base: "^master$"
            - run: cargo fmt --check

    lint:
        name: Lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: moonrepo/setup-rust@v1
              with:
                  channel: stable
                  components: clippy
                  cache-base: "^master$"
            - run: cargo clippy -- -D warnings

    build-cross-platform:
        name: Build ${{ matrix.build.NAME }}
        needs: lint
        runs-on: ${{ matrix.build.OS }}
        strategy:
            fail-fast: false
            matrix:
                build:
                    - {
                          NAME: linux-x64,
                          OS: ubuntu-latest,
                          TOOLCHAIN: stable,
                          TARGET: x86_64-unknown-linux-gnu,
                      }
                    - {
                          NAME: linux-arm64,
                          OS: ubuntu-latest,
                          TOOLCHAIN: stable,
                          TARGET: aarch64-unknown-linux-gnu,
                      }
                    - {
                          NAME: windows-x64,
                          OS: windows-latest,
                          TOOLCHAIN: stable,
                          TARGET: x86_64-pc-windows-msvc,
                      }
                    - {
                          NAME: windows-arm64,
                          OS: windows-latest,
                          TOOLCHAIN: stable,
                          TARGET: aarch64-pc-windows-msvc,
                      }
                    - {
                          NAME: darwin-x64,
                          OS: macos-14,
                          TOOLCHAIN: stable,
                          TARGET: x86_64-apple-darwin,
                      }
                    - {
                          NAME: darwin-arm64,
                          OS: macos-14,
                          TOOLCHAIN: stable,
                          TARGET: aarch64-apple-darwin,
                      }
        steps:
            - uses: actions/checkout@v4

            - uses: moonrepo/setup-rust@v1
              with:
                  channel: ${{ matrix.build.TOOLCHAIN }}
                  cache-base: "^master$"
                  targets: ${{ matrix.build.TARGET }}

            - name: Setup ARM64 cross-compilation
              if: matrix.build.TARGET == 'aarch64-unknown-linux-gnu'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y gcc-aarch64-linux-gnu

            - name: Build binary
              run: cargo build --release --locked --target ${{ matrix.build.TARGET }}
              env:
                  PKG_CONFIG_ALLOW_CROSS: ${{ matrix.build.TARGET == 'aarch64-unknown-linux-gnu' && '1' || '' }}
                  PKG_CONFIG_PATH: ${{ matrix.build.TARGET == 'aarch64-unknown-linux-gnu' && '/usr/lib/aarch64-linux-gnu/pkgconfig' || '' }}
                  CC_aarch64_unknown_linux_gnu: ${{ matrix.build.TARGET == 'aarch64-unknown-linux-gnu' && 'aarch64-linux-gnu-gcc' || '' }}
                  AR_aarch64_unknown_linux_gnu: ${{ matrix.build.TARGET == 'aarch64-unknown-linux-gnu' && 'aarch64-linux-gnu-ar' || '' }}
                  CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: ${{ matrix.build.TARGET == 'aarch64-unknown-linux-gnu' && 'aarch64-linux-gnu-gcc' || '' }}

            - name: Upload binary
              uses: actions/upload-artifact@v4
              with:
                  name: binary-${{ matrix.build.NAME }}
                  path: target/${{ matrix.build.TARGET }}/release/sunny*
                  retention-days: 7

    publish-cargo:
        name: Publish to Cargo
        needs: [build-cross-platform, lint, check-versions]
        runs-on: ubuntu-latest
        if: needs.check-versions.outputs.skip_cargo != 'true'
        steps:
            - uses: actions/checkout@v4
            - uses: moonrepo/setup-rust@v1
              with:
                  channel: stable
                  cache-base: "^master$"
            - name: Publish to crates.io
              run: cargo publish --token ${{ env.CARGO_TOKEN }}

    publish-npm:
        name: Publish NPM packages
        needs: [build-cross-platform, lint, check-versions]
        runs-on: ubuntu-latest
        if: needs.check-versions.outputs.skip_npm != 'true'
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  registry-url: "https://registry.npmjs.org"
                  scope: "@jamesukiyo"

            - name: Download all binary artifacts
              uses: actions/download-artifact@v4
              with:
                  path: artifacts
                  pattern: binary-*

            - name: Create npm package with all binaries
              run: |
                  chmod +x scripts/*.sh
                  ./scripts/create_npm.sh artifacts npm-package

            - name: Publish main package
              run: ./scripts/publish_npm.sh npm-package

    update-packages:
        name: Update Package Manifests
        needs: [build-cross-platform, lint]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Download all binary artifacts
              uses: actions/download-artifact@v4
              with:
                  path: artifacts
                  pattern: binary-*

            - name: Create release archives
              run: |
                  chmod +x scripts/*.sh
                  ./scripts/create_archives.sh artifacts release-assets

            - name: Update package manifest hashes
              run: ./scripts/update_hashes.sh release-assets

            - name: Upload release archives for GitHub release
              uses: actions/upload-artifact@v4
              with:
                  name: platform-release-archives
                  path: release-assets/
                  retention-days: 7

            - name: Commit updated package manifests
              run: |
                  git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git config --local user.name "github-actions[bot]"
                  git add packages/scoop/sunny-cli.json HomebrewFormula/sunny-cli.rb
                  git commit -m "chore: update package manifests for ${GITHUB_REF#refs/tags/}" || echo "No changes to commit"
                  git push origin HEAD:master || echo "Failed to push package manifest updates"

    github-release:
        name: Create GitHub Release
        needs: [update-packages]
        if: always()
        permissions:
            contents: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Download all binary artifacts for release
              uses: actions/download-artifact@v4
              with:
                  path: artifacts
                  pattern: binary-*

            - name: Create release archives from binary artifacts
              run: |
                  chmod +x scripts/*.sh
                  ./scripts/create_release.sh artifacts release-assets

            - name: Download platform archives from package update job
              uses: actions/download-artifact@v4
              with:
                  name: platform-release-archives
                  path: release-assets/

            - name: Automatic release
              uses: marvinpinto/action-automatic-releases@latest
              with:
                  repo_token: "${{ secrets.GITHUB_TOKEN }}"
                  prerelease: false
                  files: |
                      ./release-assets/*
